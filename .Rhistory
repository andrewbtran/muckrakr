install.packages("muckrock")
library(muckrock)
?muckrock
ag <- agency_metadata
View(ag)
ju <- jurisdiction_metadata
View(ju)
re <- request_metadata
View(re)
library(muckraker)
?untangle
library(roxygen2)
roxygenise()
library(muckraker)
?untangle
roxygenise()
library(muckraker)
?untangle
roxygenise()
library(muckraker)
?muckraker
library(muckraker)
library(muckrakr)
library(muckrakr)
library(readr)
?read_csv
?list.files
library(roxygen2)
roxygenise()
roxygenise()
library(muckrakr)
library(muckrakr)
roxygenise()
library(muckrakr)
roxygenise()
library(muckrakr)
library(muckrakr)
library(readxl)
?list.files
?read_excel
?write_excel
?readxl
files = list.files(folder, pattern=c("*.xls", "*.xlsx"))
link="https://twitter.com/memeprovider/status/833888807959289856"
length(link)
link="https://twitter.com/memeprovider/status/833888807959289856"
gsub("https://twitter.com/", "", link)
username <- gsub("https://twitter.com/", "", link)
?gsub
username <- gsub("https://twitter.com/", "", link)
gsub("/.*","" fixed=T)
gsub("/.*","", fixed=T)
gsub("/.*","",username, fixed=T)
gsub("/*.","",username, fixed=T)
gsub("///*.","",username, fixed=T)
gsub("\\/*.","",username, fixed=T)
gsub("\\/.*","",username, fixed=T)
gsub("status.*","",username, fixed=T)
gsub("status*.","",username, fixed=T)
gsub(".*status","",username, fixed=T)
gsub(".*status","",username, fixed=F)
gsub("/.*","",username, fixed=F)
id_num <- gsub(".*/", "", link)
id_num
tweet_cap <- function(link="", filename="NOTHINGTWEET_CAP", folder="DEFAULTTWEETCAP"){
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(!require(webshot)){
devtools::install_github("wch/webshot")
library(webshot)
}
if (folder=="DEFAULTTWEETCAP") {
folder=getwd()
} else {
folder <- paste0(getwd(), "/", folder)
}
if (length(link)==1) {
link = link
username <- gsub("https://twitter.com/", "", link)
username <- gsub("/.*","",username, fixed=F)
if (name=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link)
image_name <- paste0(pre_name, id_num, .png)
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
}
}
tweet_cap
tweet_cap(link="https://twitter.com/memeprovider/status/833888807959289856", folder="images")
tweet_cap <- function(link="", filename="NOTHINGTWEET_CAP", folder="DEFAULTTWEETCAP"){
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(!require(webshot)){
devtools::install_github("wch/webshot")
library(webshot)
}
if (folder=="DEFAULTTWEETCAP") {
folder=getwd()
} else {
folder <- paste0(getwd(), "/", folder)
}
if (length(link)==1) {
link = link
username <- gsub("https://twitter.com/", "", link)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link)
image_name <- paste0(pre_name, id_num, .png)
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
}
}
tweet_cap(link="https://twitter.com/memeprovider/status/833888807959289856", folder="images")
tweet_cap <- function(link="", filename="NOTHINGTWEET_CAP", folder="DEFAULTTWEETCAP"){
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(!require(webshot)){
devtools::install_github("wch/webshot")
library(webshot)
}
if (folder=="DEFAULTTWEETCAP") {
folder=getwd()
} else {
folder <- paste0(getwd(), "/", folder)
}
if (length(link)==1) {
link = link
username <- gsub("https://twitter.com/", "", link)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
}
}
tweet_cap(link="https://twitter.com/memeprovider/status/833888807959289856", folder="images")
roxygenise()
library(muckrakr)
?bulk_csv
?bulk_csv
?read_excel
?read_csv
roxygenise()
roxygenise()
library(muckrakr)
knitr::opts_chunk$set(echo = TRUE)
tribble(
~Link,          ~Account,
"https://twitter.com/realDonaldTrump/status/847766558520856578", "realDonaldTrump",
"https://twitter.com/realDonaldTrump/status/847056211006631936", "realDonaldTrump",
"https://twitter.com/realDonaldTrump/status/846854703183020032", "realDonaldTrump",
"https://twitter.com/byrdinator/status/847600835148128258",      "byrdinator",
"https://twitter.com/Gizmodo/status/847532891127074823",         "Gizmodo"
)
library(tidyverse)
tribble(
~Link,          ~Account,
"https://twitter.com/realDonaldTrump/status/847766558520856578", "realDonaldTrump",
"https://twitter.com/realDonaldTrump/status/847056211006631936", "realDonaldTrump",
"https://twitter.com/realDonaldTrump/status/846854703183020032", "realDonaldTrump",
"https://twitter.com/byrdinator/status/847600835148128258",      "byrdinator",
"https://twitter.com/Gizmodo/status/847532891127074823",         "Gizmodo"
)
tribble(
~Link,          ~Account,
"https://twitter.com/realDonaldTrump/status/847766558520856578", "realDonaldTrump",
"https://twitter.com/realDonaldTrump/status/847056211006631936", "realDonaldTrump",
"https://twitter.com/realDonaldTrump/status/846854703183020032", "realDonaldTrump",
"https://twitter.com/byrdinator/status/847600835148128258",      "byrdinator",
"https://twitter.com/Gizmodo/status/847532891127074823",         "Gizmodo"
)
tweets <- tribble(
~Link,          ~Account,
"https://twitter.com/realDonaldTrump/status/847766558520856578", "realDonaldTrump",
"https://twitter.com/realDonaldTrump/status/847056211006631936", "realDonaldTrump",
"https://twitter.com/realDonaldTrump/status/846854703183020032", "realDonaldTrump",
"https://twitter.com/byrdinator/status/847600835148128258",      "byrdinator",
"https://twitter.com/Gizmodo/status/847532891127074823",         "Gizmodo"
)
View(tweets)
tweet_cap(link=tweets$Link, folder="images")
tweets$Link
link=tweets$Link
pb <- txtProgressBar(min = 0, max = length(link), style = 3)
for (i in length(link)){
link_i = link[i]
username <- gsub("https://twitter.com/", "", link_i)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link_i)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
setTxtProgressBar(pb, i)
}
filename="NOTHINGTWEET_CAP"
pb <- txtProgressBar(min = 0, max = length(link), style = 3)
for (i in length(link)){
link_i = link[i]
username <- gsub("https://twitter.com/", "", link_i)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link_i)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
setTxtProgressBar(pb, i)
}
folder="DEFAULTTWEETCAP"
pb <- txtProgressBar(min = 0, max = length(link), style = 3)
for (i in length(link)){
link_i = link[i]
username <- gsub("https://twitter.com/", "", link_i)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link_i)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
setTxtProgressBar(pb, i)
}
getwd()
roxygenise()
library(muckrakr)
tweet_cap(link="https://twitter.com/memeprovider/status/833888807959289856", folder="images")
tweet_cap(link=tweets$Link, folder="images")
tweet_cap(tweets$Link, folder="images")
tweets$Link
str(tweets$Link)
str("https://twitter.com/memeprovider/status/833888807959289856")
tweet_cap <- function(link="", filename="NOTHINGTWEET_CAP", folder="DEFAULTTWEETCAP"){
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(!require(webshot)){
devtools::install_github("wch/webshot")
library(webshot)
}
if (folder=="DEFAULTTWEETCAP") {
folder=getwd()
} else {
folder <- paste0(getwd(), "/", folder)
}
if (length(link)==1) {
link = link
username <- gsub("https://twitter.com/", "", link)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
}
if (length(link)>1) {
pb <- txtProgressBar(min = 0, max = length(link), style = 3)
for (i in length(link)){
link_i = link[i]
username <- gsub("https://twitter.com/", "", link_i)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link_i)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
setTxtProgressBar(pb, i)
}
}
}
tweet_cap(tweets$Link)
tweet_cap(tweets$Link, folder="images")
tweet_cap <- function(link="", filename="NOTHINGTWEET_CAP", folder="DEFAULTTWEETCAP"){
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(!require(webshot)){
devtools::install_github("wch/webshot")
library(webshot)
}
if (folder=="DEFAULTTWEETCAP") {
folder=getwd()
} else {
folder <- paste0(getwd(), "/", folder)
}
if (length(link)==1) {
link = link
username <- gsub("https://twitter.com/", "", link)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
}
if (length(link)>1) {
pb <- txtProgressBar(min = 0, max = length(link), style = 3)
for (i in length(link)){
link_i = link[i]
username <- gsub("https://twitter.com/", "", link_i)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link_i)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link_i, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
setTxtProgressBar(pb, i)
}
}
}
tweet_cap(tweets$Link, folder="images")
link <- tweets$Link
filename="NOTHINGTWEET_CAP"
folder <- "test"
length(link)>1
pb <- txtProgressBar(min = 0, max = length(link), style = 3)
pb
tweet_cap <- function(link="", filename="NOTHINGTWEET_CAP", folder="DEFAULTTWEETCAP"){
if(!require(devtools)){
install.packages("devtools")
library(devtools)
}
if(!require(webshot)){
devtools::install_github("wch/webshot")
library(webshot)
}
if (folder=="DEFAULTTWEETCAP") {
folder=getwd()
} else {
folder <- paste0(getwd(), "/", folder)
}
if (length(link)==1) {
link = link
username <- gsub("https://twitter.com/", "", link)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
}
if (length(link)>1) {
pb <- txtProgressBar(min = 0, max = length(link), style = 3)
for (i in 1:length(link)){
link_i = link[i]
username <- gsub("https://twitter.com/", "", link_i)
username <- gsub("/.*","",username, fixed=F)
if (filename=="NOTHINGTWEET_CAP") {
pre_name <- username
} else {
pre_name <- filename
}
id_num <- gsub(".*/", "", link_i)
image_name <- paste0(pre_name, id_num, ".png")
webshot(link_i, paste0(folder, "/", image_name), selector=c(".permalink-inner", ".permalink-tweet-container"))
setTxtProgressBar(pb, i)
}
}
}
tweet_cap(tweets$Link, folder="images")
?tweet_cap
tweet_cap(link="https://twitter.com/memeprovider/status/833888807959289856", folder="images")
tweet_cap(tweets$Link, folder="images")
roxygenize()
library(muckrakr)
